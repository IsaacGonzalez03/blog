(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{473:function(t,a,s){"use strict";s.r(a);var e=s(2),i=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"day-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-1"}},[t._v("#")]),t._v(" Day 1")]),t._v(" "),s("h1",{attrs:{id:"what-is-scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-scope"}},[t._v("#")]),t._v(" What is Scope ?")]),t._v(" "),s("p",[t._v("scope is where variables are available for use")]),t._v(" "),s("h1",{attrs:{id:"what-is-hoisting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-hoisting"}},[t._v("#")]),t._v(" What is Hoisting ?")]),t._v(" "),s("p",[t._v("Hoisting is when variables and function declarations are moved to the top of their scope")]),t._v(" "),s("h1",{attrs:{id:"in-what-cases-might-you-use-let-vs-const-vs-var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in-what-cases-might-you-use-let-vs-const-vs-var"}},[t._v("#")]),t._v(" In what cases might you use let vs const vs var?")]),t._v(" "),s("p",[t._v("var is a global variable. let and const are have blocked scope.\nthe two that are blocked can only exist inside curly braces and var can be used outside of them.")]),t._v(" "),s("p",[t._v("https://github.com/IsaacGonzalez03/js-tests-basics")])])}),[],!1,null,null,null);a.default=i.exports}}]);